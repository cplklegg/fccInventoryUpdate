Compare and update the inventory stored in a 2D array against a second 2D array of a fresh delivery. Update the current existing inventory item quantities (in arr1). If an item cannot be found, add the new item and quantity into the inventory array. The returned inventory array should be in alphabetical order by item.

Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.

Here are some helpful links:

Global Array Object

code:

function updateInventory(arr1, arr2) {
    // All inventory must be accounted for or you're fired!
      var currentInventory = createObject(arr1);
 
    arr2.forEach(function(current) {
        if (currentInventory.hasOwnProperty(current[1])) {
            currentInventory[current[1]] += current[0];
        } else {
            currentInventory[current[1]] = current[0];
        }
    });
 
    // First, we create the array, we then apply sort.
    return createArray(currentInventory).sort(function(a, b) {
        if (a[1] < b[1]) return -1;     // If the first item's name is lesser than the second's, we return -1
        if (a[1] > b[1]) return 1;      // In the opposite case, we return 1
        return 0;                       // This case should not happen in this example, but if they were to be equal, we return 0.
    });
    
    function createObject(array) {
        var obj = {};
        array.forEach(function(current) {
            obj[current[1]] = current[0];
        });
        return obj;
    }
 
    function createArray(object) {
        var array = [];
        for (var key in object) {
            array.push([object[key], key]);
        }
        return array;
    }
    return arr1;
}
